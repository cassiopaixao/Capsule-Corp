       ==================================================================
                            Universidade de São Paulo
                      Instituto de Matemática e Estatística
       ==================================================================
        Nome: Cássio Alexandre Paixão Silva Alkmin    NUSP: 7798535
              Ewerton Rodrigues Andrade                     7781335
              Gesner Borges Taquary Junior                  7797072

        MAC5742 - Introdução à Computação Paralela e Distribuída
        Professor: Marco Dimas Gubitoso
       ==================================================================

                             -----------------
                       Projeto de Cápsula Alienígena
                          -----------------------

-----------
Objetivo
-----------
O programa tem como objetivo simular a distribuição de calor em pastilhas de uma
cápsula que está entrando na atmosfera em alta velocidade. Seguindo especifica-
ção do problema, são consideradas diversas simplificações e certas complicações.
Como forma de aplicação dos conhecimentos adquiridos, a execução do programa
deve ocorrer de forma paralelizada, aproveitando recursos disponibilizados pelos
processadores multi-core.

-----------------
Entradas do Programa
-----------------
O programa recebe como entrada os parâmetros que descrevem a cápsula, tanto geo-
metria quanto propriedades das pastilhas que a revestem, e o ambiente, na se-
guinte ordem:

1. h            - corresponde à altura da cápsula, medida da base até o vértice.
2. a            - corresponde ao fator de forma o paraboloide.
3. d            - corresponde ao lado da pastilha.
4. alpha        - corresponde a um parâmetro da função de atrito.
5. t_0          - corresponde a um parâmetro da função de atrito.
6. delta        - corresponde ao parâmetro da função de dissipação.
7. theta_crit   - corresponde à temperatura na qual a pastilha se desintegra.
8. theta_0      - corresponde à temperatura inicial.
9. pos          - Vetor posição (valores de x, y e z separados por espaço).
10.vel          - Vetor velocidade (valores de x, y e z separados por espaço).
11. steps       - corresponde ao número de iterações que devem ser calculadas.

O programa faz a leitura dessas variáveis através do arquivo entrada.txt, o qual
possui, nessa ordem, apenas os valores que correspondem a cada uma delas.

--------------
Como executar?
--------------
Para facilitar esse processo foi criado o 'Makefile', para compilar o programa.
Para isto basta entrar no diretório em que está os arquivos do programa e
digitar o comando 'make', utilizando o terminal.

Ao compilar o código fonte, será criado um arquivo executável de nome 'ep'.
É importante verificar se o arquivo de entrada 'entrada.txt' está presente no
diretório. Para modificar os valores que deseja passar como entrada, basta
editar este arquivo.

Para executar, execute no terminal "./ep".

--------
Saídas
--------
O programa simula a distribuição das temperaturas a cada passo e escreve um
arquivo texto na saída (saida.txt). Além disso, o programa imprime no terminal a
temperatura média das pastilhas e do rejunte.

--------
Formato do arquivo de saída
--------
O arquivo de saída (saida.txt) possui os valores colocados em linhas, da
seguinte forma:

-> Primeira linha: a, h e d.
-> Segunda linha: temperatura da calota.
-> Terceira linha: número de anéis.
-> Linhas subsequentes: um anel por linha, com o número de pastilhas na primeira
posição, seguido pelas temperaturas de cada uma. Começando pelo topo do anel.

OBS: Temperatura positiva indica a temperatura da pastilha existente na posição,
enquanto uma negativa indica a temperatura do rejunte na posição.
Os valores das temperaturas são dados em Celsius.

--------
Paralelização
--------
1. A função ring_calc_temp é responsável por calcular as temperaturas das pas-
tilhas de um anel. A chamada a essa função para cada anel é paralelizada.

2. Após cálculos das temperaturas em determinado passo, chamadas à função
ring_update_temp (responsável por calcular a média das temperaturas das pasti-
lhas em um anel) são realizadas paralelamente.

3. Caso o anel tenha mais que um número pré-definido de pastilhas (definido
inicialmente no Makefile como 100), o calculo das temperaturas dessas pastilhas
será paralelizado.

Vale ressaltar que paralelizações em vários pontos do código foram testadas, mas
não apresentaram resultados satisfatórios, e, portanto, retiradas do código
final.

--------
Otimizações
--------
1. A fim de não alterar posição de todas as pastilhas em relação ao vetor
posição, rotacionamos os vetores posição e velocidade de modo "síncrono",
fazendo com que o vetor posição aponte para baixo (<0, 0, z>, z<0) e mantendo a
posição relativa entre esses vetores, não alterando, assim, resultado dos
cálculos.

2. A cada passo, calculamos a nova temperatura de cada pastilha, considerando
como temperatura dos vizinhos a temperatura anterior das mesmas. Para evitar
atribuição do tipo "last_temp = new_temp", utilizamos um vetor de duas posições
para guardar as temperaturas. Em passos ímpares, temp[1] representa a tempera-
tura atual, e temp[0] a temperatura no passo anterior. O oposto ocorre em passos
pares.
Tal otimização não foi realizada com a temperatura da calota, que manteve os
atributos new_temp e last_temp.

3. Evitamos referências ao número de pastilhas ou de anéis dentro dos objetos,
copiando-os para variáveis locais.


               ==================================================
                          Data: 28 de Novembro de 2011
               ==================================================

